<Window
    x:Class="Bouyomisan.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:vm="clr-namespace:Bouyomisan.ViewModels"
    Title="{Binding Version, StringFormat=Bouyomisan {0}}"
    Width="300"
    Height="425"
    Icon="../Resources/Bouyomisan.png"
    Topmost="{Binding IsChecked, ElementName=menuTopmost}">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowSettingWindow" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1.25*"/>
            <RowDefinition Height="0.3*"/>
            <RowDefinition Height="0.3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
    
        <Menu Grid.ColumnSpan="2">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="設定ウィンドウを表示">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodName="ShowSettingWindow" MethodTarget="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>

                <Separator />

                <MenuItem Header="終了(_X)">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:WindowInteractionMessageAction>
                                <l:DirectInteractionMessage>
                                    <l:WindowActionMessage Action="Close" />
                                </l:DirectInteractionMessage>
                            </l:WindowInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </MenuItem>
    
            <MenuItem Header="ウィンドウ(_W)">
                <MenuItem x:Name="menuTopmost" Header="ウィンドウをピン留め" IsCheckable="True" />
    
                <MenuItem Header="再生ボタンを非表示" IsCheckable="True">
                </MenuItem>
            </MenuItem>
        </Menu>
    
        <TextBlock
            Text="字幕"
            VerticalAlignment="Center"
            Margin="4,2"
            Grid.Row="1"
            Grid.ColumnSpan="2"/>
    
        <TextBox
            Text="{Binding Subtitles, UpdateSourceTrigger=PropertyChanged}"
            AcceptsReturn="True"
            VerticalScrollBarVisibility="Auto"
            Grid.Row="2"
            Grid.ColumnSpan="2"/>
    
        <TextBlock
            Text="読み方"
            VerticalAlignment="Center"
            Margin="4,2"
            Grid.Row="3">
    
            <TextBlock.ToolTip>
                <TextBlock>
                    <Run Text="ゆっくりが読み上げるテキストです。また、#>を行頭に付けることで音声記号列として読み上げる事が出来ます"/><LineBreak/>
                    <Run Text="(選択中の声設定の棒読み化が有効になっていると音声記号列として読み上げません)"/><LineBreak/>
                    <Run Text="例 : 「#>これわ、おんせーき'ごーです。」"/>
                </TextBlock>
            </TextBlock.ToolTip>
        </TextBlock>
    
        <CheckBox
            Content="字幕をコピー"
            IsChecked="{Binding ShouldCopySubtitles}"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="4,2"
            Grid.Row="3"
            Grid.Column="1">
    
            <CheckBox.ToolTip>
                <TextBlock Text="この項目が有効の場合、常に字幕のテキストを読み方にコピーします"/>
            </CheckBox.ToolTip>
        </CheckBox>
    
        <TextBox
            Text="{Binding Pronunciation, UpdateSourceTrigger=PropertyChanged}"
            AcceptsReturn="True"
            VerticalScrollBarVisibility="Auto"
            Grid.Row="4"
            Grid.ColumnSpan="2">
    
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <l:LivetCallMethodAction MethodName="DisableCopy" MethodTarget="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
    
        <Button Content="音声の再生" Grid.Row="5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:LivetCallMethodAction MethodName="PlayVoiceText" MethodTarget="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
    
        <Button
            Name="dragButton"
            Content="この領域をAviUtlにD&amp;D"
            Grid.Row="5"
            Grid.Column="1">
    
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <l:LivetCallMethodAction
                        MethodName="CreateExoFile"
                        MethodParameter="{Binding ElementName=dragButton}"
                        MethodTarget="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
    
        <ComboBox
            ItemsSource="{Binding VoiceSettings}"
            SelectedIndex="{Binding SelectedVoiceIndex}"
            DisplayMemberPath="Name"
            VerticalContentAlignment="Center"
            Grid.Row="6"
            Grid.ColumnSpan="2"/>
    
        <CheckBox
            Content="Wavのみ出力"
            IsChecked="{Binding ShouldOutputWavOnly}"
            VerticalAlignment="Center"
            Margin="4,0"
            Grid.Row="7"/>
    
        <ComboBox
            ItemsSource="{Binding OutputSettings}"
            SelectedIndex="{Binding SelectedOutputIndex}"
            DisplayMemberPath="Name"
            VerticalContentAlignment="Center"
            Grid.Row="7"
            Grid.Column="1"/>
    </Grid>
</Window>